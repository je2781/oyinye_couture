
services:
  oyinye-web:
    image: je278/oyinye:1.4
    container_name: nextjs-app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${PORT}:3000
    env_file: .env
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DOMAIN: ${DOMAIN}
      USER: ${USER}
      PASS: ${PASS}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
      NEXT_PUBLIC_DOMAIN: ${NEXT_PUBLIC_DOMAIN}
      IPINFO_TOKEN: ${IPINFO_TOKEN}
      NEXT_PUBLIC_MER_CODE: ${NEXT_PUBLIC_MER_CODE}
      NEXT_PUBLIC_PAY_ITEM_ID: ${NEXT_PUBLIC_PAY_ITEM_ID}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    depends_on:
      - postgres
  postgres:
    image: postgres
    ports:
      - ${DB_PORT}:5432
    container_name: postgres
    restart: always
    env_file: .env
    volumes:
      - db_data:/var/lib/postgresql/data/
      - ./src/db/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
      # - ./src/ssl/certs/:/certs/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p ${DB_PORT} -U ${USER} -d ${DB_NAME}"]
      start_period: 0s
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASS}
      POSTGRES_DB: ${DB_NAME}
      # Enable SSL
      # POSTGRES_SSL_CERT: /certs/server.crt
      # POSTGRES_SSL_KEY: /certs/server.key
      # POSTGRES_SSL_CA: /certs/root.crt

volumes:
  db_data:



