apiVersion: v1
kind: ConfigMap
metadata:
  name: web-config
data:
  DB_PASS: "{{.Values.config.WEB_DB_PASS}}"
  DB_NAME: "{{.Values.config.WEB_DB_NAME}}"
  PORT: "{{.Values.config.WEB_PORT}}"
  DB_HOST: "{{.Values.config.WEB_DB_HOST}}"
  DB_USER: "{{.Values.config.WEB_DB_USER}}"
  DB_PORT: "{{.Values.config.WEB_DB_PORT}}"
  DEV_RABBITMQ_URL: "{{.Values.config.DEV_RABBITMQ_URL}}"
  PROD_RABBITMQ_URL: "{{.Values.config.PROD_RABBITMQ_URL}}"
  RABBITMQ_AUTH_QUEUE: "{{.Values.config.RABBITMQ_AUTH_QUEUE}}"
  RABBITMQ_WEB_QUEUE: "{{.Values.config.RABBITMQ_WEB_QUEUE}}"
  RABBITMQ_ADMIN_QUEUE: "{{.Values.config.RABBITMQ_ADMIN_QUEUE}}"
  RABBITMQ_EMAIL_QUEUE: "{{.Values.config.RABBITMQ_EMAIL_QUEUE}}"
  APP_NAME: "{{.Values.config.WEB_APP_NAME}}"
  SERVICE_NAME: "{{.Values.config.WEB_SERVICE_NAME}}"
  NODE_ENV: "development"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  template:
    metadata:
      labels:
        app: web
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.config.WEB_PORT }}"
    spec:
      containers:
        - name: web
          image: je278/web-service:1.1
          resources:
            requests:
              cpu: "250m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          # resources:
          #   limits:
          #     memory: "128Mi"
          #     cpu: "250m"
          command: [ "sh", "-c" ]
          args:
            - >
              npm run typeorm:dev -- migration:run -d ./typeorm.config.ts &&
              npm run start:dev web
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          ports:
            - containerPort: 4000
          ports:
          envFrom:
            - configMapRef:
                name: web-config

