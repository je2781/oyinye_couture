

apiVersion: v1
kind: Secret
metadata:
  name: auth-secret
  namespace: oyinyecouture
type: Opaque
data:
  JWT_SECRET: "{{ .Values.secret.JWT_SECRET }}"

---


apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-config
  namespace: oyinyecouture
data:
  DB_PASS: "{{ .Values.config.AUTH_DB_PASS }}"
  DB_NAME: "{{ .Values.config.AUTH_DB_NAME }}"
  PORT: "{{ .Values.config.AUTH_PORT }}"
  DB_HOST: "{{ .Values.config.AUTH_DB_HOST }}"
  DB_USER: "{{ .Values.config.AUTH_DB_USER }}"
  DB_PORT: "{{ .Values.config.AUTH_DB_PORT }}"
  DEV_RABBITMQ_URL: "{{ .Values.config.DEV_RABBITMQ_URL }}"
  PROD_RABBITMQ_URL: "{{ .Values.config.PROD_RABBITMQ_URL }}"
  RABBITMQ_AUTH_QUEUE: "{{ .Values.config.RABBITMQ_AUTH_QUEUE }}"
  RABBITMQ_WEB_QUEUE: "{{ .Values.config.RABBITMQ_WEB_QUEUE }}"
  RABBITMQ_ADMIN_QUEUE: "{{ .Values.config.RABBITMQ_ADMIN_QUEUE }}"
  RABBITMQ_EMAIL_QUEUE: "{{ .Values.config.RABBITMQ_EMAIL_QUEUE }}"
  APP_NAME: "{{ .Values.config.AUTH_APP_NAME }}"
  SERVICE_NAME: "{{ .Values.config.AUTH_SERVICE_NAME }}"
  JWT_EXPIRES_IN: "{{ .Values.config.JWT_EXPIRES_IN  }}"
  NODE_ENV: "development"
  NODE_TLS_REJECT_UNAUTHORIZED: '0'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: auth
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  template:
    metadata:
      labels:
        app: auth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.config.AUTH_PORT }}"
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z oyinyecouture-auth-db.oyinyecouture.svc.cluster.local 5435; do echo "Waiting for DB..."; sleep 2; done']
      containers:
        - name: auth
          image: je278/auth-service:1.1
          command: [ "sh", "-c" ] # for production run -- npm run start:prod --service=auth
          args:
            - >
              npm run typeorm:dev -- migration:run -d ./typeorm.config.ts &&
              npm run start:dev auth
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: auth-config
            - secretRef:
                name: auth-secret



