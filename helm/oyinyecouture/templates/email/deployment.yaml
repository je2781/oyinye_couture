
apiVersion: v1
kind: ConfigMap
metadata:
  name: email-config
  namespace: oyinyecouture
data:
  DEV_RABBITMQ_URL: "{{.Values.config.DEV_RABBITMQ_URL}}"
  PROD_RABBITMQ_URL: "{{.Values.config.PROD_RABBITMQ_URL}}"
  RABBITMQ_AUTH_QUEUE: "{{.Values.config.RABBITMQ_AUTH_QUEUE}}"
  RABBITMQ_EMAIL_QUEUE: "{{.Values.config.RABBITMQ_EMAIL_QUEUE}}"
  APP_NAME: "{{.Values.config.EMAIL_APP_NAME}}"
  SENDGRID_API_KEY: "{{.Values.config.SENDGRID_API_KEY}}"
  NODE_ENV: "development"
  NODE_TLS_REJECT_UNAUTHORIZED: '0'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: email
  namespace: oyinyecouture
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: email
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  template:
    metadata:
      labels:
        app: email
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z oyinyecouture-rabbitmq-headless.oyinyecouture.svc.cluster.local 5671; do echo "Waiting for RabbitMQ..."; sleep 2; done']
      containers:
        - name: email
          image: je278/email-service:1.0
          command: [ "sh", "-c" ]
          args:
            - >
              npm run start:dev email
          # resources:
          #   limits:
          #     memory: "128Mi"
          #     cpu: "250m"
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          envFrom:
            - configMapRef:
                name: email-config


