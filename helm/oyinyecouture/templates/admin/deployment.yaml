
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-config
data:
  DB_PASS: "{{ .Values.config.ADMIN_DB_PASS }}"
  DB_NAME: "{{ .Values.config.ADMIN_DB_NAME }}"
  PORT: "{{ .Values.config.ADMIN_PORT }}"
  DB_HOST: "{{ .Values.config.ADMIN_DB_HOST }}"
  DB_USER: "{{ .Values.config.ADMIN_DB_USER }}"
  DB_PORT: "{{ .Values.config.ADMIN_DB_PORT }}"
  FRONTEND_WEB_DOMAIN: "{{ .Values.config.FRONTEND_WEB_DOMAIN }}"
  DEV_RABBITMQ_URL: "{{ .Values.config.DEV_RABBITMQ_URL }}"
  PROD_RABBITMQ_URL: "{{ .Values.config.PROD_RABBITMQ_URL }}"
  RABBITMQ_AUTH_QUEUE: "{{ .Values.config.RABBITMQ_AUTH_QUEUE }}"
  RABBITMQ_WEB_QUEUE: "{{ .Values.config.RABBITMQ_WEB_QUEUE }}"
  RABBITMQ_ADMIN_QUEUE: "{{ .Values.config.RABBITMQ_ADMIN_QUEUE }}"
  RABBITMQ_EMAIL_QUEUE: "{{ .Values.config.RABBITMQ_EMAIL_QUEUE }}"
  APP_NAME: "{{ .Values.config.ADMIN_APP_NAME }}"
  SERVICE_NAME: "{{ .Values.config.ADMIN_SERVICE_NAME }}"
  NODE_ENV: "development"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.config.ADMIN_PORT }}"
    spec:
      containers:
        - name: admin
          image: je278/admin-service:1.1
          command: [ "sh", "-c" ]
          args:
            - |
              npm run typeorm -- migration:run -d ./typeorm.config.ts && \
              npm run start:dev admin
          # resources:
          #   limits:
          #     memory: "128Mi"
          #     cpu: "250m"
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          ports:
            - containerPort: {{ .Values.config.ADMIN_PORT }}
          envFrom:
            - configMapRef:
                name: admin-config

